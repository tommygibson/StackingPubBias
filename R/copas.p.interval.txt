### Copas model with selection on p-value intervals

data
{
  for(i in 1:S){
    s2[i] = s[i] ^ 2
    p.val[i] = min(2 * (pnorm(-y[i] / s[i], 0, 1)), 1)
    
    p.01[i] = ifelse(p.val[i] < 0.01, 1, 0) # indicator for p < 0.01
    p.05[i] = ifelse(p.val[i] >= 0.01 && p.val[i] < 0.05, 1, 0)  # indicator for 0.01 < p < 0.05
    
    
  }
  
}

model
{
  for(i in 1:S){
    y[i] ~ dnorm(mean.y[i], prec.y[i])
    z[i] ~ dnorm(u[i], 1) T(0,)
    
    mean.y[i] = theta0 + rho * s[i] * (z[i] - u[i])
    prec.y[i] = 1 / var.y[i]
    var.y[i] = tau2 + s2[i] * (1 - (rho ^ 2))
    
    # we would expect gamma2 > gamma1 to make significant results more likely to be published
    u[i] = gamma0 + gamma1 * p.05[i] + gamma2 * p.01[i] 
    
  }
  
  gamma0 ~ dunif(-2, 2)
  gamma1 ~ dunif(-1, 1)
  gamma2 ~ dunif(-1, 1)
  
  theta0 ~ dnorm(0, 0.01)
  
  tau ~ dt(0, 1, 1) T(0,)
  tau2 = tau ^ 2
  rho ~ dunif(-1, 1)
  
  for(i in 1:S){
    rho_bar[i] = rho * s[i] / sqrt(tau2 + s2[i])
    v[i] = (u[i] + rho_bar[i] * (y[i] - theta0) / sqrt(tau2 + s2[i])) / sqrt(1 - rho_bar[i] ^ 2)
    loglik[i] = log(pnorm(v[i], 0, 1)) - 0.5 * log(tau2 + s2[i]) - (y[i] - theta0) ^ 2 / (2 * (tau2 + s2[i])) - log(pnorm(u[i], 0, 1))
  }
  
}